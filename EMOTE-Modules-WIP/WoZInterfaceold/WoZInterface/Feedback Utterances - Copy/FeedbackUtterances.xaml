<UserControl x:Class="WOZInterface.FeedbackUtterances"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             mc:Ignorable="d" d:DesignWidth="818" Height="430" >

    <UserControl.Resources>

        <Image Source="pack://application:,,,/Images/Feedback/ExcellentOn.png" x:Key="ExcellentOn"/>
        <Image Source="pack://application:,,,/Images/Feedback/ExcellentOff.png" x:Key="ExcellentOff"/>
        <Image Source="pack://application:,,,/Images/Feedback/ExcellentOver.png" x:Key="ExcellentOver"/>
        <Image Source="pack://application:,,,/Images/Feedback/GoodOn.png" x:Key="GoodOn"/>
        <Image Source="pack://application:,,,/Images/Feedback/GoodOff.png" x:Key="GoodOff"/>
        <Image Source="pack://application:,,,/Images/Feedback/GoodOver.png" x:Key="GoodOver"/>
        <Image Source="pack://application:,,,/Images/Feedback/NeutralOn.png" x:Key="NeutralOn"/>
        <Image Source="pack://application:,,,/Images/Feedback/NeutralOff.png" x:Key="NeutralOff"/>
        <Image Source="pack://application:,,,/Images/Feedback/NeutralOver.png" x:Key="NeutralOver"/>
        <Image Source="pack://application:,,,/Images/Feedback/AlmostOn.png" x:Key="AlmostOn"/>
        <Image Source="pack://application:,,,/Images/Feedback/AlmostOff.png" x:Key="AlmostOff"/>
        <Image Source="pack://application:,,,/Images/Feedback/AlmostOver.png" x:Key="AlmostOver"/>
        <Image Source="pack://application:,,,/Images/Feedback/NegativeOn.png" x:Key="NegativeOn"/>
        <Image Source="pack://application:,,,/Images/Feedback/NegativeOff.png" x:Key="NegativeOff"/>
        <Image Source="pack://application:,,,/Images/Feedback/NegativeOver.png" x:Key="NegativeOver"/>

       

        <ControlTemplate x:Key="FeedbackRadioButton" TargetType="RadioButton">
            <Grid>
                <Image Width="64" Height="64" RenderOptions.BitmapScalingMode="NearestNeighbor"/>
                <ContentPresenter/>
            </Grid>

            <!-- Excellent Feedback -->
            <ControlTemplate.Triggers>

                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding RelativeSource={RelativeSource self}, Path=IsChecked}" Value="True" />
                        <Condition Binding="{Binding RelativeSource={RelativeSource self}, Path=Name}" Value="ExcellentFeedback" />
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Content" Value="{DynamicResource ExcellentOn}"/>
                </MultiDataTrigger>

                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding RelativeSource={RelativeSource self}, Path=IsChecked}" Value="False" />
                        <Condition Binding="{Binding RelativeSource={RelativeSource self}, Path=Name}" Value="ExcellentFeedback" />
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Content" Value="{DynamicResource ExcellentOff}"/>
                </MultiDataTrigger>

                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding RelativeSource={RelativeSource self}, Path=IsMouseOver}" Value="True" />
                        <Condition Binding="{Binding RelativeSource={RelativeSource self}, Path=Name}" Value="ExcellentFeedback" />
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Content" Value="{DynamicResource ExcellentOver}"/>
                </MultiDataTrigger>


                <!-- Good Feedback -->
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding RelativeSource={RelativeSource self}, Path=IsChecked}" Value="True" />
                        <Condition Binding="{Binding RelativeSource={RelativeSource self}, Path=Name}" Value="GoodFeedback" />
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Content" Value="{DynamicResource GoodOn}"/>
                </MultiDataTrigger>

                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding RelativeSource={RelativeSource self}, Path=IsChecked}" Value="False" />
                        <Condition Binding="{Binding RelativeSource={RelativeSource self}, Path=Name}" Value="GoodFeedback" />
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Content" Value="{DynamicResource GoodOff}"/>
                </MultiDataTrigger>

                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding RelativeSource={RelativeSource self}, Path=IsMouseOver}" Value="True" />
                        <Condition Binding="{Binding RelativeSource={RelativeSource self}, Path=Name}" Value="GoodFeedback" />
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Content" Value="{DynamicResource GoodOver}"/>
                </MultiDataTrigger>

                <!-- Neutral Feedback -->
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding RelativeSource={RelativeSource self}, Path=IsChecked}" Value="True" />
                        <Condition Binding="{Binding RelativeSource={RelativeSource self}, Path=Name}" Value="NeutralFeedback" />
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Content" Value="{DynamicResource NeutralOn}"/>
                </MultiDataTrigger>

                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding RelativeSource={RelativeSource self}, Path=IsChecked}" Value="False" />
                        <Condition Binding="{Binding RelativeSource={RelativeSource self}, Path=Name}" Value="NeutralFeedback" />
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Content" Value="{DynamicResource NeutralOff}"/>
                </MultiDataTrigger>

                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding RelativeSource={RelativeSource self}, Path=IsMouseOver}" Value="True" />
                        <Condition Binding="{Binding RelativeSource={RelativeSource self}, Path=Name}" Value="NeutralFeedback" />
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Content" Value="{DynamicResource NeutralOver}"/>
                </MultiDataTrigger>

                <!-- Almost Feedback -->
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding RelativeSource={RelativeSource self}, Path=IsChecked}" Value="True" />
                        <Condition Binding="{Binding RelativeSource={RelativeSource self}, Path=Name}" Value="AlmostFeedback" />
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Content" Value="{DynamicResource AlmostOn}"/>
                </MultiDataTrigger>

                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding RelativeSource={RelativeSource self}, Path=IsChecked}" Value="False" />
                        <Condition Binding="{Binding RelativeSource={RelativeSource self}, Path=Name}" Value="AlmostFeedback" />
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Content" Value="{DynamicResource AlmostOff}"/>
                </MultiDataTrigger>

                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding RelativeSource={RelativeSource self}, Path=IsMouseOver}" Value="True" />
                        <Condition Binding="{Binding RelativeSource={RelativeSource self}, Path=Name}" Value="AlmostFeedback" />
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Content" Value="{DynamicResource AlmostOver}"/>
                </MultiDataTrigger>
                
                <!-- Negative Feedback -->
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding RelativeSource={RelativeSource self}, Path=IsChecked}" Value="True" />
                        <Condition Binding="{Binding RelativeSource={RelativeSource self}, Path=Name}" Value="NegativeFeedback" />
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Content" Value="{DynamicResource NegativeOn}"/>
                </MultiDataTrigger>

                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding RelativeSource={RelativeSource self}, Path=IsChecked}" Value="False" />
                        <Condition Binding="{Binding RelativeSource={RelativeSource self}, Path=Name}" Value="NegativeFeedback" />
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Content" Value="{DynamicResource NegativeOff}"/>
                </MultiDataTrigger>

                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding RelativeSource={RelativeSource self}, Path=IsMouseOver}" Value="True" />
                        <Condition Binding="{Binding RelativeSource={RelativeSource self}, Path=Name}" Value="NegativeFeedback" />
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Content" Value="{DynamicResource NegativeOver}"/>
                </MultiDataTrigger>

            </ControlTemplate.Triggers>
        </ControlTemplate>

    </UserControl.Resources>


    <Grid>
        <Grid Margin="10,12,423,0">
            
            

            <DockPanel>
                <CheckBox Name="distance" IsChecked="False"  Tag="wait" Uid="Not Required!" Click="RefreshUtteranceList"  HorizontalAlignment="Center" Template="{StaticResource CustomDistanceFB}" Margin="0,27,0,0" >Waiting</CheckBox>
                <CheckBox Name="direction" IsChecked="False"  Tag="wait" Uid="Not Required!" Click="RefreshUtteranceList" HorizontalAlignment="Center" Template="{StaticResource CustomDirectionFB}" Margin="0,27,0,0" >Waiting</CheckBox>
                <CheckBox Name="symbol" IsChecked="False"  Tag="wait" Uid="Not Required!" Click="RefreshUtteranceList" HorizontalAlignment="Center" Template="{StaticResource CustomSymbolFB}" Margin="0,27,0,0" >Waiting</CheckBox>
            </DockPanel>

            <DockPanel Margin="10,316,0,20" HorizontalAlignment="Left" Width="365">
                <RadioButton Name="ExcellentFeedback" IsChecked="False" Click="RefreshUtteranceList" HorizontalAlignment="Center" Template="{StaticResource FeedbackRadioButton}" Width="72" />
                <RadioButton Name="GoodFeedback" IsChecked="True" Click="RefreshUtteranceList" HorizontalAlignment="Center" Template="{StaticResource FeedbackRadioButton}"  Width="72" />
                <RadioButton Name="NeutralFeedback" IsChecked="False" Click="RefreshUtteranceList" HorizontalAlignment="Center" Template="{StaticResource FeedbackRadioButton}"  Width="72" />
                <RadioButton Name="AlmostFeedback" IsChecked="False" Click="RefreshUtteranceList" HorizontalAlignment="Center" Template="{StaticResource FeedbackRadioButton}"  Width="72" />
                <RadioButton Name="NegativeFeedback" IsChecked="False" Click="RefreshUtteranceList" HorizontalAlignment="Center" Template="{StaticResource FeedbackRadioButton}"  Width="72" />
            </DockPanel>

            <Image Name="ResponseIndicator" HorizontalAlignment="Left" Height="128" Margin="128,10,0,0" VerticalAlignment="Top" Width="128" RenderOptions.BitmapScalingMode="NearestNeighbor" RenderOptions.EdgeMode="Aliased" />
            
            <DockPanel Margin="0,105,0,280">
                <Button Template="{StaticResource SmallSkillClearButton}" Name="ClearSkill"  Click="ClearAllSkills"  Width="39" Margin="0,0,0,0" ></Button>
                <Button Template="{StaticResource SmallSkillAllButton}" Name="FillSkill"  Click="SelectAllSkills"  Width="39" Margin="300,0,0,0" ></Button>

            </DockPanel>
        </Grid>

        <Line  X1="400" Y1="5" X2="400" Y2="430" Stroke="White" StrokeDashArray="2, 4" StrokeThickness="4" />

        <Grid Margin="395,0,0,0">

            <Grid x:Name="ScriptGrid" HorizontalAlignment="Left" Height="357" Margin="22,24,0,0" VerticalAlignment="Top" Width="391"/>

            <DockPanel Height="32" Margin="70,386,10,12" >
                <Button Template="{StaticResource AutoButton}" Name="Auto"  Click="AutoSelectUtterance" Width="150" >Automatic</Button>
                <Button Template="{StaticResource SelectButton}" Name="Manual" Click="ManualSelectUtterance" Width="150" >Manual</Button>
            </DockPanel>


        </Grid>

    </Grid>
</UserControl>
